{"ast":null,"code":"var _jsxFileName = \"/Users/rolibb/work/array_io/testcode/web/src/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport SessionContext from './shared/contexts/session';\n\nconst PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  const {\n    isAuthenticated\n  } = useContext(SessionContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => isAuthenticated ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/rolibb/work/array_io/testcode/web/src/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","SessionContext","PrivateRoute","children","rest","isAuthenticated","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,UAAU,CAACG,cAAD,CAAtC;AACA,sBACE,oBAAC,KAAD,oBACMG,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KACND,eAAe,GACbF,QADa,gBAGb,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFI,QAAAA,QAAQ,EAAE,GADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAnBD;;AAqBA,eAAeJ,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport SessionContext from './shared/contexts/session';\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const { isAuthenticated } = useContext(SessionContext);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}